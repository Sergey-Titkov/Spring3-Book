<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd">


  <!-- oracle bean used for a few examples -->
  <bean id="messageProvider" name="messageProviderHelloWorld"
        class="com.apress.prospring3.ch4.app_context_xml.HelloWorldMessageProvider"/>

  <!-- Внедрение через метод установки, классический способ -->
  <!--
  <bean id="messageRenderer" class="com.apress.prospring3.ch4.app_context_xml.StandardOutMessageRenderer">
		<property name="messageProvider">
			<ref bean="messageProvider"/>
		</property>
	</bean>
  -->

  <!-- Внедрение через метод установки, при подключенно пространстве имен p -->
  <bean id="messageRenderer" class="com.apress.prospring3.ch4.app_context_xml.StandardOutMessageRenderer"
        p:messageProvider-ref="messageProvider"/>


  <!-- Внедряемся через конструктор, классический вариант -->
  <!--
  <bean id="сonfigurableMessageProvider" class="com.apress.prospring3.ch4.app_context_xml.ConfigurableMessageProvider">

    <constructor-arg>
        <value>Это значение пришло из xml</value>
    </constructor-arg>
  </bean>
  -->
  <!-- Внедряемся через конструктор, с использоавние пространства имен с -->
  <!-- c:<имя поля в конструктор>  -->
  <bean id="сonfigurableMessageProvider" class="com.apress.prospring3.ch4.app_context_xml.ConfigurableMessageProvider"
        c:message="Это значение пришло из xml"
    />
  <!-- Внедряемся через установщие, с использоавние пространства имен p -->
  <!-- p:<имя аргумента в сеттере>  -->
  <!-- p:_<порядковый номер аргумента в сеттере>  -->

  <bean id="сonfigurableStandardOutMessageRenderer"
        class="com.apress.prospring3.ch4.app_context_xml.StandardOutMessageRenderer"
        p:messageProvider-ref="сonfigurableMessageProvider"/>

  <!-- Внедряемся через конструктор, несколько конструкторов -->
  <!--
  <bean id="constructorConfusion" class="com.apress.prospring3.ch4.app_context_xml.ConstructorConfusion" lazy-init="true">
      <constructor-arg type="Integer">
          <value>90</value>
      </constructor-arg>
  </bean>
-->
  <!--
    Внедряемся через конструктор, с использоавние пространства имен "с", при использовании пространства имен "c"
    мы не можем указать тип, но можем указать имя параметра в конструкторе
  -->
  <!-- c:<имя аргумента в конструкторе>  -->
  <!-- c:_<ппорядковый номер аргумента в конструкторе>  -->
  <bean id="constructorConfusion" class="com.apress.prospring3.ch4.app_context_xml.ConstructorConfusion"
        lazy-init="true"
        c:someValueInteger="90"
    />

  <!-- Внедрение простых значенй -->
  <bean id="injectSimple" class="com.apress.prospring3.ch4.app_context_xml.InjectSimple">
    <property name="name">
      <value>John Smith</value>
    </property>
    <property name="age">
      <value>35</value>
    </property>
    <property name="height">
      <value>1.78</value>
    </property>
    <property name="programmer">
      <value>true</value>
    </property>
    <property name="ageInSeconds">
      <value>1103760000</value>
    </property>
  </bean>

  <!-- Внедрение простых значенй с использованием SPeL -->
  <!-- Контейнер -->
  <bean id="injectSimpleConfig" class="com.apress.prospring3.ch4.app_context_xml.InjectSimpleConfig"/>

  <!-- Внедрение -->
  <bean id="injectSimpleSpel" class="com.apress.prospring3.ch4.app_context_xml.InjectSimpleSpel">
    <property name="name">
      <value>#{injectSimpleConfig.name + " Это текст в XML"}</value>
    </property>
    <property name="age">
      <value>#{injectSimpleConfig.age + 1}</value>
    </property>
    <property name="height">
      <value>#{injectSimpleConfig.height}</value>
    </property>
    <property name="programmer">
      <value>#{injectSimpleConfig.programmer}</value>
    </property>
    <property name="ageInSeconds">
      <value>#{injectSimpleConfig.ageInSeconds}</value>
    </property>
  </bean>

  <!--  type="int"  Sample for constructor confusion -->
  <!--
  <bean id="constructorConfusion" class="com.apress.prospring3.ch4.notcomlited.annotation.xml.ConstructorConfusion">
      <constructor-arg type="int">
          <value>90</value>
      </constructor-arg>
  </bean>
-->
  <!-- injecting values using SpEL -->
  <!--
  <bean id="injectSimpleConfig" class="com.apress.prospring3.ch4.notcomlited.annotation.xml.InjectSimpleConfig"/>
-->
  <!-- oracle bean used for a few examples -->
  <!--
  <bean id="oracle" name="wiseworm" class="com.apress.prospring3.ch4.simple.BookwormOracle"/>
-->
  <!-- inject ref sample (using id) -->
  <!--
  <bean id="injectRef" class="com.apress.prospring3.ch4.notcomlited.annotation.xml.InjectRef">
      <property name="oracle">
          <ref local="oracle"/>
      </property>
  </bean>
  -->

  <!-- inject ref sample (using name) -->
  <!--
  <bean name="injectRef" class="com.apress.prospring3.ch4.notcomlited.annotation.xml.InjectRef">
      <property name="oracle">
          <ref bean="wiseworm"/>
      </property>
  </bean>
-->
  <!-- hierarchical application contexts -->
  <!--
  <bean id="injectBean" class="java.lang.String">
      <constructor-arg>
          <value>Bean In Child</value>
      </constructor-arg>
  </bean>

  <bean id="target1" class="com.apress.prospring3.ch4.notcomlited.annotation.кщще.SimpleTarget">
      <property name="val">
          <ref bean="injectBeanParent"/>
      </property>
  </bean>

  <bean id="target2" class="com.apress.prospring3.ch4.notcomlited.annotation.кщще.SimpleTarget">
      <property name="val">
          <ref bean="injectBean"/>
      </property>
  </bean>

  <bean id="target3" class="com.apress.prospring3.ch4.notcomlited.annotation.кщще.SimpleTarget">
      <property name="val">
          <ref parent="injectBean"/>
      </property>
  </bean>
  -->

  <!-- collection injection samples -->
  <!--
  <bean id="injectCollection" class="com.apress.prospring3.ch4.notcomlited.annotation.xml.CollectionInjection">
      <property name="map">
          <map>
              <entry key="someValue">
                  <value>Hello World!</value>
              </entry>
              <entry key="someBean">
                  <ref local="oracle"/>
              </entry>
          </map>
      </property>
      <property name="props">
          <props>
              <prop key="firstName">Clarence</prop>
              <prop key="secondName">Ho</prop>
          </props>
      </property>
      <property name="set">
          <set>
              <value>Hello World!</value>
              <ref local="oracle"/>
          </set>
      </property>
      <property name="list">
          <list>
              <value>Hello World!</value>
              <ref local="oracle"/>
          </list>
      </property>
  </bean>
-->
  <!-- aliasing examples -->
  <!--
  <bean id="name1" name="name2 name3,name4;name5" class="java.lang.String"/>
  <alias name="name1" alias="name6"/>
-->
  <!-- non-singleton examples -->
  <!--
  <bean id="nonSingleton" class="java.lang.String" scope="prototype">
      <constructor-arg>
          <value>Clarence Ho</value>
      </constructor-arg>
  </bean>
  -->
  <!-- inheritance examples -->
  <!--
  <bean id="inheritParent" class="com.apress.prospring3.ch4.notcomlited.annotation.inheritance.SimpleBean">
      <property name="name">
          <value>Clarence Ho</value>
      </property>
      <property name="age">
          <value>22</value>
      </property>
  </bean>

  <bean id="inheritChild" class="com.apress.prospring3.ch4.notcomlited.annotation.inheritance.SimpleBean" parent="inheritParent">
      <property name="age">
          <value>35</value>
      </property>
  </bean>
-->
</beans>
